localStorage用于持久化的本地存储，除非主动删除数据，否则数据是永远不会过期的。


方法：

localStorage.getItem(key):获取指定key本地存储的值

localStorage.setItem(key,value)：将value存储到key字段

localStorage.removeItem(key):删除指定key本地存储的值



1.....什么是localstorage

    在HTML5中，新加入了一个localStorage特性，这个特性主要是用来作为本地存储来使用的，解决了cookie存储空间不足的问题(cookie中每条cookie的存储空间为4k)，localStorage中一般浏览器支持的是5M大小，这个在不同的浏览器中localStorage会有所不同。

    localstorage的优点与局限
    localStorage的优势
    localStorage拓展了cookie的4K限制

    localStorage会可以将第一次请求的数据直接存储到本地，这个相当于一个5M大小的针对于前端页面的数据库，相比于cookie可以节约带宽，但是这个却是只有在高版本的浏览器中才支持的

    localStorage的局限
    浏览器的大小不统一，并且在IE8以上的IE版本才支持localStorage这个属性
    目前所有的浏览器中都会把localStorage的值类型限定为string类型，这个在对我们日常比较常见的JSON对象类型需要一些转换
    localStorage在浏览器的隐私模式下面是不可读取的
    localStorage本质上是对字符串的读取，如果存储内容多的话会消耗内存空间，会导致页面变卡
    localStorage不能被爬虫抓取到
    localStorage与sessionStorage的唯一一点区别就是localStorage属于永久性存储，而>sessionStorage属于当会话结束的时候，sessionStorage中的键值对会被清空

2.....localstorage的三种写法
	var storage=window.localStorage;
    //写入a字段
    storage["a"]=1;
    //写入b字段
    storage.a=1;
     //写入c字段
     storage.setItem("c",3);
     console.log(typeof storage["a"]);
     console.log(typeof storage["b"]);

3.....localstorage的三种读取方法
	var storage=window.localStorage;
        //写入a字段
    storage["a"]=1;
        //写入b字段
    storage.a=1;
        //写入c字段
    storage.setItem("c",3);
    console.log(typeof storage["a"]);
    console.log(typeof storage["b"]);
    console.log(typeof storage["c"]);
        //第一种方法读取
    var a=storage.a;
    console.log(a);
        //第二种方法读取
    var b=storage["b"];
    console.log(b);
        //第三种方法读取
    var c=storage.getItem("c");
    console.log(c);

4.....localStorage的删除 清除所有内容
	var storage=window.localStorage;
    storage.a=1;
    storage.setItem("c",3);
    console.log(storage);
    storage.clear();
    console.log(storage);

5.....将localStorage中的某个键值对删除
	var storage=window.localStorage;
    storage.a=1;
    storage.setItem("c",3);
    console.log(storage);
    storage.removeItem("a");
    console.log(storage.a);

6....使用key()方法，向其中出入索引即可获取对应的键
	var storage=window.localStorage;
    storage.a=1;
    storage.setItem("c",3);
    for(var i=0;i<storage.length;i++){
        var key=storage.key(i);
        console.log(key);
    }
