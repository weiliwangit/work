一.....创建javascript.Date



返回当前日期和时间的Date对象与'1970/01/01 00:00:00'之间的毫秒值(北京时间的时区为东8区，起点时间实际为：'1970/01/01 08:00:00')
console.log(Date.now()); // => 1419431519276


console.log(Date.parse('2014/12/25 12:00:00')); // => 1419480000000`
console.log(Date.parse('2014-12-25 12:00:00')); // => 1419480000000  (注意：此转换方式在IE中返回NaN！)


	javascript.Date 与 java.lang.Date 用法及其相似
	var myDate=new Date()
	Date 对象会自动把当前日期和时间保存为其初始值。
	参数形式有以下５种：  
	   new Date("month dd,yyyy hh:mm:ss");
	   new Date("month dd,yyyy");
	   new Date(yyyy,mth,dd,hh,mm,ss);
	   new Date(yyyy,mth,dd);
	   new Date(ms);

	其中,
	month:用英文表示月份名称，从January到December
	mth:用整数表示月份，从0（1月）到11（12月）
	dd:表示一个月中的第几天，从1到31
	yyyy:四位数表示的年份
	hh:小时数，从0（午夜）到23（晚11点）
	mm:分钟数，从0到59的整数
	ss:秒数，从0到59的整数
	ms:毫秒数，为大于等于0的整数

	如：
	new Date("January 12,2006 22:19:35");
	new Date("January 12,2006");
	new Date(2006,0,12,22,19,35);
	new Date(2006,0,12);
	new Date(1137075575000);

	Date对象方法:

	Date对象方法包含如下:

	getDate() 从 Date 对象返回一个月中的某一天 (1 ~ 31)。  
	getDay() 从 Date 对象返回一周中的某一天 (0 ~ 6)。  
	getMonth() 从 Date 对象返回月份 (0 ~ 11)。  
	getFullYear() 从 Date 对象以四位数字返回年份。 
	getYear() 请使用 getFullYear() 方法代替。 
	getHours() 返回 Date 对象的小时 (0 ~ 23)。  
	getMinutes() 返回 Date 对象的分钟 (0 ~ 59)。  
	getSeconds() 返回 Date 对象的秒数 (0 ~ 59)。  
	getMilliseconds() 返回 Date 对象的毫秒(0 ~ 999)。  
	getTime() 返回 1970 年 1 月 1 日至今的毫秒数。  

	getTimezoneOffset() 返回本地时间与格林威治标准时间 (GMT) 的分钟差。  
	getUTCDate() 根据世界时从 Date 对象返回月中的一天 (1 ~ 31)。  
	getUTCDay() 根据世界时从 Date 对象返回周中的一天 (0 ~ 6)。  
	getUTCMonth() 根据世界时从 Date 对象返回月份 (0 ~ 11)。  
	getUTCFullYear() 根据世界时从 Date 对象返回四位数的年份。  
	getUTCHours() 根据世界时返回 Date 对象的小时 (0 ~ 23)。  
	getUTCMinutes() 根据世界时返回 Date 对象的分钟 (0 ~ 59)。 
	getUTCSeconds() 根据世界时返回 Date 对象的秒钟 (0 ~ 59)。  
	getUTCMilliseconds() 根据世界时返回 Date 对象的毫秒(0 ~ 999)。  
	parse() 返回1970年1月1日午夜到指定日期（字符串）的毫秒数。 

	setDate() 设置 Date 对象中月的某一天 (1 ~ 31)。 
	setMonth() 设置 Date 对象中月份 (0 ~ 11)。  
	setFullYear() 设置 Date 对象中的年份（四位数字）。  
	setYear() 请使用 setFullYear() 方法代替。  
	setHours() 设置 Date 对象中的小时 (0 ~ 23)。  
	setMinutes() 设置 Date 对象中的分钟 (0 ~ 59)。  
	setSeconds() 设置 Date 对象中的秒钟 (0 ~ 59)。  
	setMilliseconds() 设置 Date 对象中的毫秒 (0 ~ 999)。  
	setTime() 以毫秒设置 Date 对象。  

	setUTCDate() 根据世界时设置 Date 对象中月份的一天 (1 ~ 31)。  
	setUTCMonth() 根据世界时设置 Date 对象中的月份 (0 ~ 11)。  
	setUTCFullYear() 根据世界时设置 Date 对象中的年份（四位数字）。  
	setUTCHours() 根据世界时设置 Date 对象中的小时 (0 ~ 23)。  
	setUTCMinutes() 根据世界时设置 Date 对象中的分钟 (0 ~ 59)。  
	setUTCSeconds() 根据世界时设置 Date 对象中的秒钟 (0 ~ 59)。  
	setUTCMilliseconds() 根据世界时设置 Date 对象中的毫秒 (0 ~ 999)。  
	toSource() 返回该对象的源代码。 
	 
	toString() 把 Date 对象转换为字符串。  
	toTimeString() 把 Date 对象的时间部分转换为字符串。  
	toDateString() 把 Date 对象的日期部分转换为字符串。
	 
	toGMTString() 请使用 toUTCString() 方法代替。 1 3 
	toUTCString() 根据世界时，把 Date 对象转换为字符串。   
	toLocaleString() 根据本地时间格式，把 Date 对象转换为字符串。  
	toLocaleTimeString() 根据本地时间格式，把 Date 对象的时间部分转换为字符串。 
	toLocaleDateString() 根据本地时间格式，把 Date 对象的日期部分转换为字符串。 
	UTC() 根据世界时返回 1997 年 1 月 1 日 到指定日期的毫秒数。 
	valueOf() 返回 Date 对象的原始值。  

二.....将 yyyy-MM-dd HH:mm:ss 格式字符串转化成javascript Date

	function dateParse(dateString) {
	    if (typeof(dateString) == "undefined"
	        || null == dateString) {
	        return null;
	    }
	 
	    var sub = dateString.split(" ");
	    if (sub.length < 2) { // 格式不正确
	        return null;
	    }
	 
	    var subY = sub[0].split("-");
	    if (subY.length < 3) { // 格式不正确
	        return null;
	    }
	 
	    var subD = sub[1].split(":");
	    if (subD.length < 3) { // 格式不正确
	        return null;
	    }

	 
	    return new Date(subY[0], subY[1], subY[2], subD[0], subD[1], subD[2]);
	}

三.....将javascript.Date 格式化为 yyyy-MM-dd HH:mm:ss 字符串
	function dateFormate(date) {
	    if (typeof(date) == "undefined"
	        || null == date) {
	        return "";
	    }
	 
	    var year = date.getFullYear();
	    var month = date.getMonth() + 1 < 10 ? "0" + (date.getMonth() + 1) : date.getMonth() + 1;
	    var day = date.getDate() < 10 ? "0" + date.getDate() : date.getDate();
	    var hour = date.getHours() < 10 ? "0" + date.getHours() : date.getHours();
	    var minute = date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes();
	    var second = date.getSeconds() < 10 ? "0" + date.getSeconds() : date.getSeconds();
	    return year + "-" + month + "-" + day + " " + hour + ":" + minute + ":" + second;
	}
